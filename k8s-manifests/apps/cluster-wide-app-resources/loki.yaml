apiVersion: v1
kind: Service
metadata:
  name: loki-lb
  namespace: logging
spec:
  type: NodePort
  ports:
    - port: 3100
      targetPort: 3100
      nodePort: 30045
      protocol: TCP
  selector:
    app.kubernetes.io/component: write
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki
---
apiVersion: v1
kind: Secret
metadata:
  name: loki-minio-secret
  namespace: logging
type: Opaque
data:
  MINIO_ACCESS_KEY_ID: bG9raQ==
  MINIO_SECRET_ACCESS_KEY: bG9raVBhc3N3b3Jk
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    chart: loki
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.12.0
    helm:
      releaseName: loki
      values: |
        deploymentMode: Distributed
        loki:
          # ref: https://grafana.com/docs/loki/latest/operations/storage/schema/
          schemaConfig:
            configs:
              - from: 2024-04-01
                store: tsdb
                object_store: s3
                schema: v13
                index:
                  prefix: loki_index_
                  period: 24h

          # Write logs to Loki on OTLP.
          limits_config:
            allow_structured_metadata: true
            reject_old_samples: true
            reject_old_samples_max_age: 168h
            max_cache_freshness_per_query: 10m
            split_queries_by_interval: 15m
            query_timeout: 300s
            volume_enabled: true

          # Disable multi-tenant support
          auth_enabled: false

          # S3 backend storage configuration
          storage:
            bucketNames:
              chunks: k8s-loki
              ruler: k8s-loki
              admin: loki
            type: s3
            s3:
              endpoint: minio.minio:9000
              region: ap-northeast-1
              secretAccessKey: minio123
              accessKeyId: minio
              s3ForcePathStyle: true
              insecure: true
              http_config:
                idle_conn_timeout: 90s
                response_header_timeout: 0s
                insecure_skip_verify: true

          # -- Configure memcached as an external cache for chunk and results cache.
          memcached:
            chunk_cache:
              enabled: true
              host: loki-chunks-cache.logging.svc
              service: memcached-client
              batch_size: 256
              parallelism: 10
            results_cache:
              enabled: true
              host: loki-results-cache.logging.svc
              service: memcached-client
              default_validity: 12h

          # Configure the chunk and index write cache
          chunk_store_config:
            chunk_cache_config:
              memcached:
                batch_size: 256
                parallelism: 10
              memcached_client:
                host: loki-chunks-cache.logging.svc
                service: memcache

          # Configure the query result cache
          query_range:
            cache_results: true
            results_cache:
              cache:
                memcached_client:
                  consistent_hash: true
                  host: results-cache-memcached.logging.svc
                  service: memcache
                  max_idle_conns: 16
                  timeout: 500ms
                  update_interval: 1m

          # Configure the index queries cache
          storage_config:
            index_queries_cache_config:
              memcached:
                batch_size: 100
                parallelism: 100
              memcached_client:
                host: results-cache-memcached.logging.svc
                service: memcache
                consistent_hash: true

          ingester:
            chunk_encoding: snappy
          tracing:
            enabled: true
          querier:
            max_concurrent: 3

        ingester:
          replicas: 2
        querier:
          replicas: 2
          maxUnavailable: 2
        queryFrontend:
          replicas: 2
          maxUnavailable: 1
        queryScheduler:
          replicas: 2
        distributor:
          replicas: 2
          maxUnavailable: 2
        compactor:
          replicas: 1
        indexGateway:
          replicas: 2
          maxUnavailable: 1

        bloomCompactor:
          replicas: 0
        bloomGateway:
          replicas: 0
        minio:
          enabled: false
        backend:
          replicas: 0
        read:
          replicas: 0
        write:
          replicas: 0
        singleBinary:
          replicas: 0
  destination:
    server: "https://kubernetes.default.svc"
    namespace: logging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=true
