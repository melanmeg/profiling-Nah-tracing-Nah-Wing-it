apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: opentelemetry-collector
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    chart: opentelemetry-collector
    repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
    targetRevision: 0.105.1
    helm:
      releaseName: opentelemetry-collector
      values: |
        mode: daemonset
        image:
          repository: otel/opentelemetry-collector-k8s
        command:
          name: otelcol-k8s
        presets:
          # enables the k8sattributesprocessor and adds it to the traces, metrics, and logs pipelines
          kubernetesAttributes:
            enabled: true
          # enables the kubeletstatsreceiver and adds it to the metrics pipelines
          kubeletMetrics:
            enabled: true
          # Enables the filelogreceiver and adds it to the logs pipelines
          logsCollection:
            enabled: true
            includeCollectorLogs: true
          hostMetrics:
            enabled: true
        config:
          exporters:
            # NOTE: Prior to v0.86.0 use `logging` instead of `debug`.
            debug: {}
            otlp:
              endpoint: tempo-distributed-distributor.tracing:4317
              tls:
                insecure: true
            otlphttp/prometheus:
              endpoint: "http://prometheus-kube-prometheus-prometheus.monitoring:9090/api/v1/otlp"
              tls:
                insecure: true
            otlphttp/loki:
              endpoint: http://loki.logging:3100/otlp
              tls:
                insecure: true
          extensions:
            health_check: {}
          processors:
            batch: {}
            # batch/2: #二つ目の設定
            #   send_batch_size: 1000
            #   timeout: 10s
            memory_limiter:
              check_interval: 5s
              limit_percentage: 80
              spike_limit_percentage: 25
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: ${env:MY_POD_IP}:4317
                http:
                  endpoint: ${env:MY_POD_IP}:4318
                  cors:
                    allowed_origins:
                      - "http://*"
                      - "https://*"
          connectors:
            spanmetrics: {}
          service:
            extensions:
              - health_check
            pipelines:
              traces:
                processors: [memory_limiter, batch]
                exporters: [otlp, debug, spanmetrics]
              metrics:
                receivers: [otlp, spanmetrics]
                processors: [memory_limiter, batch]
                exporters: [otlphttp/prometheus, debug]
              logs:
                processors: [memory_limiter, batch]
                exporters: [otlphttp/loki, debug]
            telemetry:
              metrics:
                address: ${env:MY_POD_IP}:8888
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: otel
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
