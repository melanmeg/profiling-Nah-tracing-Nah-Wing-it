- name: kubeadm config images pull
  ansible.builtin.shell: kubeadm config images pull

- name: k9s
  ansible.builtin.shell: |
    aria2c -d /tmp -x 16 -s 16 -k 1M -o k9s.tar.gz https://github.com/derailed/k9s/releases/download/v0.32.5/k9s_Linux_amd64.tar.gz
    tar -xvf /tmp/k9s.tar.gz -C /tmp
    cp -a /tmp/k9s /usr/local/bin/k9s
    chown root:root /usr/local/bin/k9s
    chmod +x /usr/local/bin/k9s

- name: Generate and set_fact KUBEADM_BOOTSTRAP_TOKEN
  ansible.builtin.set_fact:
    KUBEADM_BOOTSTRAP_TOKEN: "{{ lookup('pipe', 'echo $(openssl rand -hex 3).$(openssl rand -hex 8)') }}"
  ignore_errors: true

- name: template
  ansible.builtin.template:
    src: ./files/cp/init_kubeadm.yaml.j2
    dest: /tmp/init_kubeadm.yaml
  environment:
    KUBEADM_BOOTSTRAP_TOKEN: "{{ KUBEADM_BOOTSTRAP_TOKEN }}"
  ignore_errors: true

- name: Execute kubeadm init
  ansible.builtin.shell: kubeadm init --config /tmp/init_kubeadm.yaml --skip-phases=addon/kube-proxy

- name: file
  ansible.builtin.file:
    path: "~/.kube"
    state: directory
    recurse: true

- name: copy
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "~/.kube/config"
    mode: "0600"
    remote_src: true
  ignore_errors: true

- name: file {{ USER }}
  ansible.builtin.file:
    path: "/home/{{ USER }}/.kube"
    state: directory
    owner: "{{ USER }}"
    group: "{{ USER }}"
    recurse: true

- name: copy {{ USER }}
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ USER }}/.kube/config"
    owner: "{{ USER }}"
    group: "{{ USER }}"
    mode: "0600"
    remote_src: true
  ignore_errors: true

- name: shell Generate KUBEADM_UPLOADED_CERTS
  ansible.builtin.shell: kubeadm init phase upload-certs --upload-certs 2>&1 | tail -n 1
  register: shell_output

- name: set_fact KUBEADM_UPLOADED_CERTS
  ansible.builtin.set_fact:
    KUBEADM_UPLOADED_CERTS: "{{ shell_output.stdout }}"

- name: template
  ansible.builtin.template:
    src: ./files/cp/join_kubeadm_cp.yaml.j2
    dest: /tmp/join_kubeadm_cp.yaml
  environment:
    KUBEADM_BOOTSTRAP_TOKEN: "{{ KUBEADM_BOOTSTRAP_TOKEN }}"
    KUBEADM_UPLOADED_CERTS: "{{ KUBEADM_UPLOADED_CERTS }}"
  ignore_errors: true

- name: template
  ansible.builtin.template:
    src: ./files/cp/join_kubeadm_wk.yaml.j2
    dest: /tmp/join_kubeadm_wk.yaml
  environment:
    KUBEADM_BOOTSTRAP_TOKEN: "{{ KUBEADM_BOOTSTRAP_TOKEN }}"
  ignore_errors: true

- name: fetch joinfile cp
  ansible.builtin.fetch:
    src: "/tmp/join_kubeadm_cp.yaml"
    dest: "./files/fetch/"
    flat: true
  ignore_errors: true

- name: fetch joinfile wk
  ansible.builtin.fetch:
    src: "/tmp/join_kubeadm_wk.yaml"
    dest: "./files/fetch/"
    flat: true
  ignore_errors: true

- name: blockinfile .bashrc
  ansible.builtin.blockinfile:
    dest: "~/.bashrc"
    insertafter: EOF
    block: |
      source <(kubectl completion bash)
      alias k='kubectl'
      complete -F __start_kubectl k

- name: blockinfile .bashrc {{ USER }}
  ansible.builtin.blockinfile:
    dest: "/home/{{ USER }}/.bashrc"
    insertafter: EOF
    block: |
      source <(kubectl completion bash)
      alias k='kubectl'
      complete -F __start_kubectl k
